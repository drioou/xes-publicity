function Loader(t){this.resources={},this.resourcesLen=t.length,this.counter=0,this.timer={},this.init(t)}Loader.prototype={init:function(t){var e=this;e.setRes(t),e.fetch(e.resources),Loader.prototype=utils.mixin(Loader.prototype,Events.prototype)},setRes:function(t){var e=this;t.forEach(function(t,n){var r=e.getFileName(t),i=e.getFileExt(t),o=e.getNodeType(i),s={ext:i,type:o,path:t};e.resources[r]=s})},getFileName:function(t){return t.slice(t.lastIndexOf("/")+1).replace(/\?.*$/,"").toLowerCase()},getFileExt:function(t){return t.slice(t.lastIndexOf(".")+1,t.length).toLowerCase()},getNodeType:function(t){var e={img:["jpg","jpeg","gif","png","bmp"],audio:["ogg","wav","mp3","aac"]};for(var n in e)if(e[n].indexOf(t)>-1)return n},fetchImg:function(t){var e=this,n=new Image;n.style.display="none",n.onload=function(){e.count()},n.src=t},fetchAudio:function(t){var e=this,n=new Audio;n.preload="auto";var r=function(){return function(){n.readyState>0&&(clearInterval(e.timer[t]),e.timer[t]=null,e.count())}}();e.timer[t]=setInterval(r,100),n.src=t},fetch:function(t){for(var e in t)switch(t[e].type){case"img":this.fetchImg(t[e].path);break;case"audio":this.fetchAudio(t[e].path)}},count:function(){if(this.counter++,this.counter===this.resourcesLen)this.trigger("success");else{var t=parseInt(this.counter/this.resourcesLen*100);this.trigger("progress",t)}}};var Events=function(){};Events.prototype={constructor:Event,eventMap:{},trigger:function(t,e){this.eventMap[t]&&this.eventMap[t].forEach(function(t){t.call(this,e)})},on:function(t,e){this.eventMap[t]?this.eventMap[t].push(e):this.eventMap[t]=[e]}};var utils={mixin:function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}},loader=function(){return function(t){return new Loader(t)}}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxvYWRlci5qcyJdLCJuYW1lcyI6WyJMb2FkZXIiLCJ0IiwidGhpcyIsInJlc291cmNlcyIsInJlc291cmNlc0xlbiIsImxlbmd0aCIsImNvdW50ZXIiLCJ0aW1lciIsImluaXQiLCJwcm90b3R5cGUiLCJlIiwic2V0UmVzIiwiZmV0Y2giLCJ1dGlscyIsIm1peGluIiwiRXZlbnRzIiwiZm9yRWFjaCIsIm4iLCJyIiwiZ2V0RmlsZU5hbWUiLCJpIiwiZ2V0RmlsZUV4dCIsIm8iLCJnZXROb2RlVHlwZSIsInMiLCJleHQiLCJ0eXBlIiwicGF0aCIsInNsaWNlIiwibGFzdEluZGV4T2YiLCJyZXBsYWNlIiwidG9Mb3dlckNhc2UiLCJpbWciLCJhdWRpbyIsImluZGV4T2YiLCJmZXRjaEltZyIsIkltYWdlIiwic3R5bGUiLCJkaXNwbGF5Iiwib25sb2FkIiwiY291bnQiLCJzcmMiLCJmZXRjaEF1ZGlvIiwiQXVkaW8iLCJwcmVsb2FkIiwicmVhZHlTdGF0ZSIsImNsZWFySW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsInRyaWdnZXIiLCJwYXJzZUludCIsImNvbnN0cnVjdG9yIiwiRXZlbnQiLCJldmVudE1hcCIsImNhbGwiLCJvbiIsInB1c2giLCJoYXNPd25Qcm9wZXJ0eSIsImxvYWRlciJdLCJtYXBwaW5ncyI6IkFBQUEsUUFBU0EsUUFBT0MsR0FDWkMsS0FBS0MsYUFBZ0JELEtBQUtFLGFBQWVILEVBQUVJLE9BQVFILEtBQUtJLFFBQVUsRUFBR0osS0FBS0ssU0FBWUwsS0FBS00sS0FBS1AsR0FFcEdELE9BQU9TLFdBQ0hELEtBQU0sU0FBU1AsR0FDWCxHQUFJUyxHQUFJUixJQUNSUSxHQUFFQyxPQUFPVixHQUFJUyxFQUFFRSxNQUFNRixFQUFFUCxXQUFZSCxPQUFPUyxVQUFZSSxNQUFNQyxNQUFNZCxPQUFPUyxVQUFXTSxPQUFPTixZQUUvRkUsT0FBUSxTQUFTVixHQUNiLEdBQUlTLEdBQUlSLElBQ1JELEdBQUVlLFFBQVEsU0FBU2YsRUFBR2dCLEdBQ2xCLEdBQUlDLEdBQUlSLEVBQUVTLFlBQVlsQixHQUNsQm1CLEVBQUlWLEVBQUVXLFdBQVdwQixHQUNqQnFCLEVBQUlaLEVBQUVhLFlBQVlILEdBQ2xCSSxHQUNJQyxJQUFLTCxFQUNMTSxLQUFNSixFQUNOSyxLQUFNMUIsRUFFZFMsR0FBRVAsVUFBVWUsR0FBS00sS0FHekJMLFlBQWEsU0FBU2xCLEdBQ2xCLE1BQU9BLEdBQUUyQixNQUFNM0IsRUFBRTRCLFlBQVksS0FBTyxHQUFHQyxRQUFRLFFBQVMsSUFBSUMsZUFFaEVWLFdBQVksU0FBU3BCLEdBQ2pCLE1BQU9BLEdBQUUyQixNQUFNM0IsRUFBRTRCLFlBQVksS0FBTyxFQUFHNUIsRUFBRUksUUFBUTBCLGVBRXJEUixZQUFhLFNBQVN0QixHQUNsQixHQUFJUyxJQUNBc0IsS0FBTSxNQUFPLE9BQVEsTUFBTyxNQUFPLE9BQ25DQyxPQUFRLE1BQU8sTUFBTyxNQUFPLE9BRWpDLEtBQUssR0FBSWhCLEtBQUtQLEdBQ1YsR0FBSUEsRUFBRU8sR0FBR2lCLFFBQVFqQyxHQUFLLEdBQUksTUFBT2dCLElBRXpDa0IsU0FBVSxTQUFTbEMsR0FDZixHQUFJUyxHQUFJUixLQUNKZSxFQUFJLEdBQUltQixNQUNabkIsR0FBRW9CLE1BQU1DLFFBQVUsT0FBUXJCLEVBQUVzQixPQUFTLFdBQ2pDN0IsRUFBRThCLFNBQ0h2QixFQUFFd0IsSUFBTXhDLEdBRWZ5QyxXQUFZLFNBQVN6QyxHQUNqQixHQUFJUyxHQUFJUixLQUNKZSxFQUFJLEdBQUkwQixNQUNaMUIsR0FBRTJCLFFBQVUsTUFDWixJQUFJMUIsR0FBSSxXQUNKLE1BQU8sWUFDSEQsRUFBRTRCLFdBQWEsSUFBTUMsY0FBY3BDLEVBQUVILE1BQU1OLElBQUtTLEVBQUVILE1BQU1OLEdBQUssS0FBTVMsRUFBRThCLFlBRzdFOUIsR0FBRUgsTUFBTU4sR0FBSzhDLFlBQVk3QixFQUFHLEtBQU1ELEVBQUV3QixJQUFNeEMsR0FFOUNXLE1BQU8sU0FBU1gsR0FDWixJQUFLLEdBQUlTLEtBQUtULEdBQUcsT0FBUUEsRUFBRVMsR0FBR2dCLE1BQzFCLElBQUssTUFDRHhCLEtBQUtpQyxTQUFTbEMsRUFBRVMsR0FBR2lCLEtBQ25CLE1BQ0osS0FBSyxRQUNEekIsS0FBS3dDLFdBQVd6QyxFQUFFUyxHQUFHaUIsUUFHakNhLE1BQU8sV0FDSCxHQUFJdEMsS0FBS0ksVUFBV0osS0FBS0ksVUFBWUosS0FBS0UsYUFBY0YsS0FBSzhDLFFBQVEsZUFDaEUsQ0FDRCxHQUFJL0MsR0FBSWdELFNBQVMvQyxLQUFLSSxRQUFVSixLQUFLRSxhQUFlLElBQ3BERixNQUFLOEMsUUFBUSxXQUFZL0MsS0FJckMsSUFBSWMsUUFBUyxZQUNiQSxRQUFPTixXQUNIeUMsWUFBYUMsTUFDYkMsWUFDQUosUUFBUyxTQUFTL0MsRUFBR1MsR0FDakJSLEtBQUtrRCxTQUFTbkQsSUFBTUMsS0FBS2tELFNBQVNuRCxHQUFHZSxRQUFRLFNBQVNmLEdBQ2xEQSxFQUFFb0QsS0FBS25ELEtBQU1RLE1BR3JCNEMsR0FBSSxTQUFTckQsRUFBR1MsR0FDWlIsS0FBS2tELFNBQVNuRCxHQUFLQyxLQUFLa0QsU0FBU25ELEdBQUdzRCxLQUFLN0MsR0FBS1IsS0FBS2tELFNBQVNuRCxJQUFNUyxJQUcxRSxJQUFJRyxRQUNJQyxNQUFPLFNBQVNiLEVBQUdTLEdBQ2YsSUFBSyxHQUFJTyxLQUFLUCxHQUFHQSxFQUFFOEMsZUFBZXZDLEtBQU9oQixFQUFFZ0IsR0FBS1AsRUFBRU8sR0FDbEQsT0FBT2hCLEtBR2Z3RCxPQUFTLFdBQ0wsTUFBTyxVQUFTeEQsR0FDWixNQUFPLElBQUlELFFBQU9DIiwiZmlsZSI6IkxvYWRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIExvYWRlcih0KSB7XG4gICAgdGhpcy5yZXNvdXJjZXMgPSB7fSwgdGhpcy5yZXNvdXJjZXNMZW4gPSB0Lmxlbmd0aCwgdGhpcy5jb3VudGVyID0gMCwgdGhpcy50aW1lciA9IHt9LCB0aGlzLmluaXQodClcbn1cbkxvYWRlci5wcm90b3R5cGUgPSB7XG4gICAgaW5pdDogZnVuY3Rpb24odCkge1xuICAgICAgICB2YXIgZSA9IHRoaXM7XG4gICAgICAgIGUuc2V0UmVzKHQpLCBlLmZldGNoKGUucmVzb3VyY2VzKSwgTG9hZGVyLnByb3RvdHlwZSA9IHV0aWxzLm1peGluKExvYWRlci5wcm90b3R5cGUsIEV2ZW50cy5wcm90b3R5cGUpXG4gICAgfSxcbiAgICBzZXRSZXM6IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgdmFyIGUgPSB0aGlzO1xuICAgICAgICB0LmZvckVhY2goZnVuY3Rpb24odCwgbikge1xuICAgICAgICAgICAgdmFyIHIgPSBlLmdldEZpbGVOYW1lKHQpLFxuICAgICAgICAgICAgICAgIGkgPSBlLmdldEZpbGVFeHQodCksXG4gICAgICAgICAgICAgICAgbyA9IGUuZ2V0Tm9kZVR5cGUoaSksXG4gICAgICAgICAgICAgICAgcyA9IHtcbiAgICAgICAgICAgICAgICAgICAgZXh0OiBpLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBvLFxuICAgICAgICAgICAgICAgICAgICBwYXRoOiB0XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGUucmVzb3VyY2VzW3JdID0gc1xuICAgICAgICB9KVxuICAgIH0sXG4gICAgZ2V0RmlsZU5hbWU6IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgcmV0dXJuIHQuc2xpY2UodC5sYXN0SW5kZXhPZihcIi9cIikgKyAxKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS50b0xvd2VyQ2FzZSgpXG4gICAgfSxcbiAgICBnZXRGaWxlRXh0OiBmdW5jdGlvbih0KSB7XG4gICAgICAgIHJldHVybiB0LnNsaWNlKHQubGFzdEluZGV4T2YoXCIuXCIpICsgMSwgdC5sZW5ndGgpLnRvTG93ZXJDYXNlKClcbiAgICB9LFxuICAgIGdldE5vZGVUeXBlOiBmdW5jdGlvbih0KSB7XG4gICAgICAgIHZhciBlID0ge1xuICAgICAgICAgICAgaW1nOiBbXCJqcGdcIiwgXCJqcGVnXCIsIFwiZ2lmXCIsIFwicG5nXCIsIFwiYm1wXCJdLFxuICAgICAgICAgICAgYXVkaW86IFtcIm9nZ1wiLCBcIndhdlwiLCBcIm1wM1wiLCBcImFhY1wiXVxuICAgICAgICB9O1xuICAgICAgICBmb3IgKHZhciBuIGluIGUpXG4gICAgICAgICAgICBpZiAoZVtuXS5pbmRleE9mKHQpID4gLTEpIHJldHVybiBuXG4gICAgfSxcbiAgICBmZXRjaEltZzogZnVuY3Rpb24odCkge1xuICAgICAgICB2YXIgZSA9IHRoaXMsXG4gICAgICAgICAgICBuID0gbmV3IEltYWdlO1xuICAgICAgICBuLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIiwgbi5vbmxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGUuY291bnQoKVxuICAgICAgICB9LCBuLnNyYyA9IHRcbiAgICB9LFxuICAgIGZldGNoQXVkaW86IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgdmFyIGUgPSB0aGlzLFxuICAgICAgICAgICAgbiA9IG5ldyBBdWRpbztcbiAgICAgICAgbi5wcmVsb2FkID0gXCJhdXRvXCI7XG4gICAgICAgIHZhciByID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgbi5yZWFkeVN0YXRlID4gMCAmJiAoY2xlYXJJbnRlcnZhbChlLnRpbWVyW3RdKSwgZS50aW1lclt0XSA9IG51bGwsIGUuY291bnQoKSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSgpO1xuICAgICAgICBlLnRpbWVyW3RdID0gc2V0SW50ZXJ2YWwociwgMTAwKSwgbi5zcmMgPSB0XG4gICAgfSxcbiAgICBmZXRjaDogZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBlIGluIHQpIHN3aXRjaCAodFtlXS50eXBlKSB7XG4gICAgICAgICAgICBjYXNlIFwiaW1nXCI6XG4gICAgICAgICAgICAgICAgdGhpcy5mZXRjaEltZyh0W2VdLnBhdGgpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcImF1ZGlvXCI6XG4gICAgICAgICAgICAgICAgdGhpcy5mZXRjaEF1ZGlvKHRbZV0ucGF0aClcbiAgICAgICAgfVxuICAgIH0sXG4gICAgY291bnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAodGhpcy5jb3VudGVyKyssIHRoaXMuY291bnRlciA9PT0gdGhpcy5yZXNvdXJjZXNMZW4pIHRoaXMudHJpZ2dlcihcInN1Y2Nlc3NcIik7XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdmFyIHQgPSBwYXJzZUludCh0aGlzLmNvdW50ZXIgLyB0aGlzLnJlc291cmNlc0xlbiAqIDEwMCk7XG4gICAgICAgICAgICB0aGlzLnRyaWdnZXIoXCJwcm9ncmVzc1wiLCB0KVxuICAgICAgICB9XG4gICAgfVxufTtcbnZhciBFdmVudHMgPSBmdW5jdGlvbigpIHt9O1xuRXZlbnRzLnByb3RvdHlwZSA9IHtcbiAgICBjb25zdHJ1Y3RvcjogRXZlbnQsXG4gICAgZXZlbnRNYXA6IHt9LFxuICAgIHRyaWdnZXI6IGZ1bmN0aW9uKHQsIGUpIHtcbiAgICAgICAgdGhpcy5ldmVudE1hcFt0XSAmJiB0aGlzLmV2ZW50TWFwW3RdLmZvckVhY2goZnVuY3Rpb24odCkge1xuICAgICAgICAgICAgdC5jYWxsKHRoaXMsIGUpXG4gICAgICAgIH0pXG4gICAgfSxcbiAgICBvbjogZnVuY3Rpb24odCwgZSkge1xuICAgICAgICB0aGlzLmV2ZW50TWFwW3RdID8gdGhpcy5ldmVudE1hcFt0XS5wdXNoKGUpIDogdGhpcy5ldmVudE1hcFt0XSA9IFtlXVxuICAgIH1cbn07XG52YXIgdXRpbHMgPSB7XG4gICAgICAgIG1peGluOiBmdW5jdGlvbih0LCBlKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBuIGluIGUpIGUuaGFzT3duUHJvcGVydHkobikgJiYgKHRbbl0gPSBlW25dKTtcbiAgICAgICAgICAgIHJldHVybiB0XG4gICAgICAgIH1cbiAgICB9LFxuICAgIGxvYWRlciA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBMb2FkZXIodClcbiAgICAgICAgfVxuICAgIH0oKTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
